console.log('internal-type-tools is ready');

export {};

/**
 * 之前已经了解了 TypeScript 中的内置类型 any、unknown、never、string、number、boolean 等，这些内置类型实际上是最基础的【积木】
 * 想要利用好这些【积木】，还需要一些实用的类型工具，它们就像是锤子、锯子和斧子，有了工具的帮助，甚至可以在类型世界中拼装出摩天大楼
 *
 * 在实际的类型编程中，为了满足各种需求下的类型定义，通常会结合使用这些类型工具，因此一定要清楚这些工具各自的使用方法和功能
 *
 * 类型工具顾名思义，就是对类型进行处理的工具
 * 如果按照使用方式来划分，类型工具可以分为三类：操作符、关键字和专用语法
 * 如果按照使用目的来划分，类型工具可以分为两类：类型创建和类型安全保护
 *
 * 类型创建：基于已有的类型创建新的类型，包含类型别名、交叉类型、索引类型和映射类型
 * 类型安全保护：包含类型查询操作符和类型守卫
 */

/**
 * 类型别名【Type Alias】，将一组类型、类型结构封装，返回一个新的类型，常见于联合类型、映射类型
 * 工具类型【Tool Type】，在类型别名的基础上，配合泛型动态创建新类型，常见于基本所有类型工具
 * 联合类型【Union Type】，创建一组类型集合，满足其中一个类型即满足这个联合类型，常见于类型别名、工具类型
 * 交叉类型【Intersection Type】，创建一组类型集合，满足其中所有类型才能满足这个交叉类型，常见于类型别名、工具类型
 * 索引签名类型【Index Signature Type】，声明一个拥有任意属性，键类型一致，值类型一致的接口结构，常见于映射类型
 * 索引类型查询【Indexed Type Query】，从一个接口结构，创建一个由其键名字符串字面量组成的联合类型，常见于映射类型
 * 索引类型访问【Indexed Access Type】，从一个接口结构，使用键名字符串字面量访问到对应的值类型，常见于类型别名、映射类型
 * 映射类型【Mapping Type】，从一个联合类型依次映射到其中的每一个类型，常见于工具类型
 */
